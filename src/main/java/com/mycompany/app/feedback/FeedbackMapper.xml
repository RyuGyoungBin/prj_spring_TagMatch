<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.mycompany.app.feedback.FeedbackMapper">

    <resultMap type="com.mycompany.app.feedback.Feedback" id="resultMapObj"></resultMap>
    
    
    <sql id="selectCommon" > 
	    FROM    
	        feedback a
	        <if test="feedbackType == 0">LEFT JOIN trainUsr b ON b.seq = a.type_seq</if> 
	        <if test="feedbackType == 1">LEFT JOIN hotelUsr c ON c.seq = a.type_seq</if>
	        <if test="feedbackType == 2">LEFT JOIN spotUsr d ON d.seq = a.type_seq</if>
	    WHERE 1=1
	    	<if test="feedbackType == 1">and c.hotel_seq = #{seq}</if>
	</sql> 
    
    <sql id="selectFeedback">
        a.seq,
        a.type,
        a.review,
        a.reviewTitle,
        a.starRating,
        a.member_seq,
        getMemberName(a.member_seq) as memberName,
        a.defaultNy,
        a.date,
        a.dateRe,
        a.type_seq
        <if test="feedbackType == 0">
        , b.start trainUsr_start, 
        b.startDateTime trainUsr_startDateTime,
        b.end trainUsr_end,
        b.endDateTime trainUsr_endDateTime,
        b.type trainUsrType,
        b.sort trainUsr_sort,
        b.adultNum trainUsr_adultNum,
        b.childNum trainUsr_childNum,
        b.price trainUsr_price
        </if>
        <if test="feedbackType == 1">
        , c.start hotelUsr_start,
        c.end hotelUsr_end,
        c.type hotelUsr_type,
        c.price hotelUsr_price,
        c.hotel_seq hotelUsr_hotel_seq,
        c.hotelRoomSeq
        </if>
        <if test="feedbackType == 2">
        , d.title spotUsr_title,
        d.type spotUsrType,
        d.adultNum spotUsr_adultNum,
        d.childNum spotUsr_childNum,
        d.price spotUsr_price,
        d.spotSeq spotUsr_seq
        </if>
    </sql>
    
    
    <select id="selectList" resultMap="resultMapObj">
	    SELECT aa. * FROM (    
	        SELECT
	            <include refid="selectFeedback" />
	            <include refid="selectCommon" />
	    ) aa
 	    WHERE 1=1
	    LIMIT #{rowNumToShow} OFFSET #{startRnumForMysql}
	</select>
    
    
    <select id="selectOneCount" resultType="Integer">
        SELECT count(*)
	        <include refid="selectCommon" />
    </select>
    
<!--     <select id="selectOne" resultMap="resultMapObj"> -->
<!--         SELECT -->
<!--         <include refid="selectFeedback" /> -->
<!--         <include refid="selectCommon" /> -->
<!--         AND a.seq = #{seq} -->
<!--     </select> -->
    
<select id="selectOne" resultMap="resultMapObj">
	SELECT
		seq
		,type
		,review
		,reviewTitle
		,starRating
		,member_seq
		,defaultNy
		,type_seq

	FROM
		feedback
	WHERE 1=1
		AND seq = #{seq}
			<if test="type != null and !type.equals('')">AND type = #{type}</if>
			<if test="review != null and review.equals('')">	AND review = #{review} </if>
			<if test="reviewTitle != null and !reviewTitle.equals('')">AND reviewTitle = #{reviewTitle}</if>
</select>
	<select id="select"></select>
    

    <select id="selectTrainUsr" resultMap="resultMapObj">
        select * from trainUsr
    </select>

    <select id="selectHotelUsr" resultMap="resultMapObj">
        select * from hotelUsr
    </select>
    
    <select id="selectspotUsr" resultMap="resultMapObj">
        select * from spotUsr
    </select>
    
    <insert id="insertFeedback">
        insert into feedback (
		         type
		        , review
		        , reviewTitle
		        , starRating
		        , member_seq
		        , defaultNy
		        , type_seq
		        , date
		        , dateRe
		        ) values (
		         #{type}
		        , #{review}
		        , #{reviewTitle}
		        , #{starRating}
		        , #{memberSeq}
		        , 0
		        , #{type_seq}
		        , now()
		        , now()
        )
        <selectKey resultType="String" keyProperty="seq" order="AFTER">
            SELECT last_insert_id()
        </selectKey>
    </insert>
    
    
    
    

    <update id="update">
        UPDATE feedback
        SET
	        type = #{type},
	        review = #{review},
	        reviewTitle = #{reviewTitle},
	        starRating = #{starRating},
	        member_seq = #{member_seq},
	        defaultNy = #{defaultNy},
	        type_seq = #{type_seq}
        WHERE
      	 	seq= #{seq}
    </update>

</mapper>
